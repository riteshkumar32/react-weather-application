{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ritesh_Codes\\\\Desktop2\\\\CoderRitesh\\\\react-weather-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Search from \"./components/search/search\";\nimport CurrentWeather from \"./components/current-weather/current-weather\";\nimport Forecast from \"./components/forecast/forecast\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./api\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forecastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forcastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forcastResponse\n      });\n    }).catch(console.log);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: currentWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }, this), forecast && /*#__PURE__*/_jsxDEV(Forecast, {\n      data: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WWp4biUQ6yxZ26omAvrL3l/oQ6o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Search","CurrentWeather","Forecast","WEATHER_API_URL","WEATHER_API_KEY","App","currentWeather","setCurrentWeather","forecast","setForecast","handleOnSearchChange","searchData","lat","lon","value","split","currentWeatherFetch","fetch","forecastFetch","Promise","all","then","response","weatherResponse","json","forcastResponse","city","label","catch","console","log"],"sources":["C:/Users/Ritesh_Codes/Desktop2/CoderRitesh/react-weather-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Search from \"./components/search/search\";\r\nimport CurrentWeather from \"./components/current-weather/current-weather\";\r\nimport Forecast from \"./components/forecast/forecast\";\r\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./api\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [currentWeather, setCurrentWeather] = useState(null);\r\n  const [forecast, setForecast] = useState(null);\r\n\r\n  const handleOnSearchChange = (searchData) => {\r\n    const [lat, lon] = searchData.value.split(\" \");\r\n\r\n    const currentWeatherFetch = fetch(\r\n      `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\r\n    );\r\n    const forecastFetch = fetch(\r\n      `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\r\n    );\r\n\r\n    Promise.all([currentWeatherFetch, forecastFetch])\r\n      .then(async (response) => {\r\n        const weatherResponse = await response[0].json();\r\n        const forcastResponse = await response[1].json();\r\n\r\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\r\n        setForecast({ city: searchData.label, ...forcastResponse });\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Search onSearchChange={handleOnSearchChange} />\r\n      {currentWeather && <CurrentWeather data={currentWeather} />}\r\n      {forecast && <Forecast data={forecast} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,OAAjD;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,IAAD,CAApD;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;;EAEA,MAAMW,oBAAoB,GAAIC,UAAD,IAAgB;IAC3C,MAAM,CAACC,GAAD,EAAMC,GAAN,IAAaF,UAAU,CAACG,KAAX,CAAiBC,KAAjB,CAAuB,GAAvB,CAAnB;IAEA,MAAMC,mBAAmB,GAAGC,KAAK,CAC9B,GAAEd,eAAgB,gBAAeS,GAAI,QAAOC,GAAI,UAAST,eAAgB,eAD3C,CAAjC;IAGA,MAAMc,aAAa,GAAGD,KAAK,CACxB,GAAEd,eAAgB,iBAAgBS,GAAI,QAAOC,GAAI,UAAST,eAAgB,eADlD,CAA3B;IAIAe,OAAO,CAACC,GAAR,CAAY,CAACJ,mBAAD,EAAsBE,aAAtB,CAAZ,EACGG,IADH,CACQ,MAAOC,QAAP,IAAoB;MACxB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,EAA9B;MACA,MAAMC,eAAe,GAAG,MAAMH,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,EAA9B;MAEAjB,iBAAiB,CAAC;QAAEmB,IAAI,EAAEf,UAAU,CAACgB,KAAnB;QAA0B,GAAGJ;MAA7B,CAAD,CAAjB;MACAd,WAAW,CAAC;QAAEiB,IAAI,EAAEf,UAAU,CAACgB,KAAnB;QAA0B,GAAGF;MAA7B,CAAD,CAAX;IACD,CAPH,EAQGG,KARH,CAQSC,OAAO,CAACC,GARjB;EASD,CAnBD;;EAqBA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE,QAAC,MAAD;MAAQ,cAAc,EAAEpB;IAAxB;MAAA;MAAA;MAAA;IAAA,QADF,EAEGJ,cAAc,iBAAI,QAAC,cAAD;MAAgB,IAAI,EAAEA;IAAtB;MAAA;MAAA;MAAA;IAAA,QAFrB,EAGGE,QAAQ,iBAAI,QAAC,QAAD;MAAU,IAAI,EAAEA;IAAhB;MAAA;MAAA;MAAA;IAAA,QAHf;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAhCQH,G;;KAAAA,G;AAkCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}