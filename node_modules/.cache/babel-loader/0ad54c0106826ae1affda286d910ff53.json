{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ritesh_Codes\\\\Desktop2\\\\CoderRitesh\\\\react-weather-app\\\\src\\\\components\\\\search\\\\search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { geoApiOptions, GEO_API_URL } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = _ref => {\n  _s();\n\n  let {\n    onSearchChange\n  } = _ref;\n  const [search, setSearch] = useState(null);\n\n  const loadOptions = inputValue => {\n    return fetch(`${GEO_API_URL}/cities?minPopulation=1&namePrefix=${inputValue}`, geoApiOptions).then(response => response.json()).then(response => {\n      return {\n        options: response.data.map(city => {\n          return {\n            value: `${city.latitude} ${city.longitude}`,\n            label: `${city.name}, ${city.countryCode}`\n          };\n        })\n      };\n    });\n  };\n\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","AsyncPaginate","geoApiOptions","GEO_API_URL","Search","onSearchChange","search","setSearch","loadOptions","inputValue","fetch","then","response","json","options","data","map","city","value","latitude","longitude","label","name","countryCode","handleOnChange","searchData"],"sources":["C:/Users/Ritesh_Codes/Desktop2/CoderRitesh/react-weather-app/src/components/search/search.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport { geoApiOptions, GEO_API_URL } from \"../../api\";\r\n\r\nconst Search = ({ onSearchChange }) => {\r\n  const [search, setSearch] = useState(null);\r\n\r\n  const loadOptions = (inputValue) => {\r\n    return fetch(\r\n      `${GEO_API_URL}/cities?minPopulation=1&namePrefix=${inputValue}`,\r\n      geoApiOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        return {\r\n          options: response.data.map((city) => {\r\n            return {\r\n              value: `${city.latitude} ${city.longitude}`,\r\n              label: `${city.name}, ${city.countryCode}`,\r\n            };\r\n          }),\r\n        };\r\n      });\r\n  };\r\n\r\n  const handleOnChange = (searchData) => {\r\n    setSearch(searchData);\r\n    onSearchChange(searchData);\r\n  };\r\n\r\n  return (\r\n    <AsyncPaginate\r\n      placeholder=\"Search for city\"\r\n      debounceTimeout={600}\r\n      value={search}\r\n      onChange={handleOnChange}\r\n      loadOptions={loadOptions}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,WAA3C;;;AAEA,MAAMC,MAAM,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC;EAAF,CAAuB;EACrC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;;EAEA,MAAMQ,WAAW,GAAIC,UAAD,IAAgB;IAClC,OAAOC,KAAK,CACT,GAAEP,WAAY,sCAAqCM,UAAW,EADrD,EAEVP,aAFU,CAAL,CAIJS,IAJI,CAIEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJf,EAKJF,IALI,CAKEC,QAAD,IAAc;MAClB,OAAO;QACLE,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAU;UACnC,OAAO;YACLC,KAAK,EAAG,GAAED,IAAI,CAACE,QAAS,IAAGF,IAAI,CAACG,SAAU,EADrC;YAELC,KAAK,EAAG,GAAEJ,IAAI,CAACK,IAAK,KAAIL,IAAI,CAACM,WAAY;UAFpC,CAAP;QAID,CALQ;MADJ,CAAP;IAQD,CAdI,CAAP;EAeD,CAhBD;;EAkBA,MAAMC,cAAc,GAAIC,UAAD,IAAgB;IACrClB,SAAS,CAACkB,UAAD,CAAT;IACApB,cAAc,CAACoB,UAAD,CAAd;EACD,CAHD;;EAKA,oBACE,QAAC,aAAD;IACE,WAAW,EAAC,iBADd;IAEE,eAAe,EAAE,GAFnB;IAGE,KAAK,EAAEnB,MAHT;IAIE,QAAQ,EAAEkB,cAJZ;IAKE,WAAW,EAAEhB;EALf;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAnCD;;GAAMJ,M;;KAAAA,M;AAqCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}